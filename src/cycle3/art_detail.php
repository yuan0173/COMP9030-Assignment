<?php
// Server-rendered Art Detail page (SSR) for Cycle 3.
// - Fetches current art snapshot from MySQL via PDO.
// - Provides friendly user-facing error messages.
// - Injects CSRF token for subsequent client-side actions.

declare(strict_types=1);

session_start();

// Ensure CSRF token exists in session (used by client when needed)
if (empty($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}

require_once __DIR__ . '/../inc/pdo.php';

function e(string $s): string { return htmlspecialchars($s, ENT_QUOTES, 'UTF-8'); }

// Read and validate id
$id = null;
if (isset($_GET['id'])) {
    $id = filter_var($_GET['id'], FILTER_VALIDATE_INT);
}

$error = null;
$art = null;

if (!$id) {
    $error = 'Invalid or missing art id.';
} else {
    try {
        $pdo = get_pdo();
        $sql = 'SELECT a.id AS art_id, a.created_at, v.*
                FROM arts a
                JOIN art_versions v ON a.current_version_id = v.id
                WHERE a.id = :id AND a.deleted_at IS NULL';
        $st = $pdo->prepare($sql);
        $st->execute([':id' => (int)$id]);
        $row = $st->fetch();
        if (!$row) {
            $error = 'The requested art could not be found.';
        } else {
            $art = $row;
        }
    } catch (Throwable $e) {
        $error = 'We had trouble loading this page. Please try again later.';
    }
}

?><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="csrf-token" content="<?php echo e((string)($_SESSION['csrf_token'] ?? '')); ?>" />
  <title><?php echo $art ? e((string)$art['title']) . ' â€“ Art Detail' : 'Art Detail'; ?></title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
  <link rel="stylesheet" href="../cycle2/css/base.css">
  <link rel="stylesheet" href="../cycle2/css/layout.css">
  <link rel="stylesheet" href="../cycle2/css/components.css">
  <link rel="stylesheet" href="../cycle2/css/pages.css">
  <style>
    /* Enhanced styles for full CRUD functionality */
    .detail { display: grid; grid-template-columns: 1fr 1fr; gap: 24px; align-items: start; }
    .gallery { position: relative; border-radius: 12px; overflow: hidden; height: 400px; }
    .map-box { height: 300px; border-radius: 12px; overflow: hidden; border: 1px solid var(--border); }
    .grid { display: grid; grid-template-columns: 1fr 1fr; gap: 24px; }
    .quote { background: var(--bg-secondary); padding: 16px; border-radius: 12px; margin: 0; }

    /* Gallery/Slider styles */
    .slider { position: relative; width: 100%; height: 100%; }
    .slider__track { display: flex; transition: transform 0.3s ease; height: 100%; }
    .slider__slide { min-width: 100%; height: 100%; }
    .slider__slide img { width: 100%; height: 100%; object-fit: cover; }
    .slider__nav { position: absolute; top: 50%; transform: translateY(-50%); z-index: 10; }
    .slider__btn { background: rgba(0,0,0,0.7); color: white; border: none; width: 40px; height: 40px; border-radius: 50%; cursor: pointer; font-size: 18px; }
    .slider__btn:first-child { left: 10px; }
    .slider__btn:last-child { right: 10px; }
    .slider__dots { position: absolute; bottom: 10px; left: 50%; transform: translateX(-50%); display: flex; gap: 8px; }
    .slider__dot { width: 10px; height: 10px; border-radius: 50%; background: rgba(255,255,255,0.5); border: none; cursor: pointer; }
    .slider__dot[aria-current="true"] { background: white; }
    /* Favorite heart overlay */
    .fav-btn { position:absolute; top:10px; right:10px; z-index:20; width:40px; height:40px; border-radius:999px; border:none; cursor:pointer; font-size:20px; line-height:40px; text-align:center; background:rgba(0,0,0,0.35); color:#fff; }
    .fav-btn.is-on{ color:#e11d48; background:rgba(255,255,255,0.9); }
  </style>
  <script>
    // Expose CSRF token for potential client-side requests
    window.CSRF_TOKEN = document.currentScript.previousElementSibling.content;
  </script>
  <meta name="robots" content="noindex" />

</head>
<body>
  <!-- Header will be dynamically generated by header.js -->
  <div id="header-placeholder"></div>

  <main class="container" style="margin-top:24px">

    <nav aria-label="Breadcrumb" style="margin-bottom:8px;color:#6b7280">
      <a href="../cycle2/Pages/ArtsResult.html">Arts</a> / <span id="breadcrumbTitle"><?php echo $art ? e((string)$art['title']) : 'Art Title'; ?></span>
    </nav>

    <?php if ($error): ?>
      <div class="notice notice--error" role="alert">
        <?php echo e($error); ?>
      </div>
    <?php else: ?>
      <!-- Left:Picture, Right:Content -->
      <section class="detail">
        <!-- Left side -->
        <div>
          <div class="gallery" id="gallery">
            <?php if (!empty($art['image'])): ?>
              <img src="<?php echo e((string)$art['image']); ?>" alt="artwork image" style="width:100%;height:100%;object-fit:cover;border-radius:12px;display:block">
            <?php else: ?>
              <img src="../test.jpg" alt="artwork image" style="width:100%;height:100%;object-fit:cover;border-radius:12px;display:block">
            <?php endif; ?>
            <button id="favOverlayBtn" class="fav-btn" title="Add to favorites" aria-pressed="false">â™¡</button>
          </div>
        </div>

        <!-- Right side -->
        <article>
          <h1 class="card__title"><?php echo e((string)$art['title']); ?></h1>
          <p class="card__desc"><?php echo e((string)$art['description']); ?></p>

          <div style="margin:12px 0;color:#111">
            <div>Art type: <strong><?php echo e((string)$art['type']); ?></strong></div>
            <div>Estimated period: <strong><?php echo e((string)$art['period']); ?></strong></div>
            <div>Condition/Quality: <strong><?php echo e((string)$art['condition']); ?></strong></div>
          </div>

          <hr style="border:none;border-top:1px solid var(--border);margin:16px 0">

          <div style="display:flex;gap:12px;align-items:center">
            <div style="width:36px;height:36px;border-radius:999px;background:#f0f0f0;display:flex;align-items:center;justify-content:center;color:#666;font-size:14px;font-weight:bold;">
              <?php echo strtoupper(substr((string)$art['title'], 0, 1)); ?>
            </div>
            <div>
              <div style="font-weight:600">
                <?php echo ((int)$art['creditKnownArtist']) ? 'Credited Artist' : 'Unknown Artist'; ?>
              </div>
              <div class="card__desc">
                Created: <?php echo date('M j, Y', strtotime((string)$art['created_at'])); ?>
                <?php if (!empty($art['changed_by'])): ?>
                  â€¢ Last edited by user <?php echo (int)$art['changed_by']; ?>
                <?php endif; ?>
              </div>
            </div>
          </div>
        </article>
      </section>

      <!-- Map and Comment -->
      <section class="grid" style="margin-top:24px">
        <div class="map-box" id="detailMap"></div>
        <blockquote class="quote">
          <strong id="detailNotes"><?php echo e((string)($art['locationNotes'] ?? 'Author\'s Comment for the arts.')); ?></strong>
          <p class="card__desc" id="detailFlags">
            <?php
            $flags = [];
            if ((int)$art['creditKnownArtist']) $flags[] = 'Credited artist';
            if ((int)$art['sensitive']) $flags[] = 'Culturally sensitive';
            if ((int)$art['privateLand']) $flags[] = 'Private land';
            echo e(implode(' â€¢ ', $flags));
            ?>
          </p>
        </blockquote>
      </section>

      <!-- Edit/Delete Controls -->
      <section class="card" style="margin-top:24px;padding:16px">
        <div class="form__row" style="justify-content: flex-end; gap: 8px">
          <button id="viewHistoryBtn" class="btn" type="button" title="View full edit history"
                  onclick="window.location.href='/cycle3/art_history.php?id=<?php echo (int)$art['art_id']; ?>'">ðŸ•˜ View Edit History</button>
          <button id="editToggle" class="pill" type="button">Edit</button>
          <button id="deleteBtn" class="pill" type="button" style="background:#fee2e2;color:#991b1b">Delete</button>
        </div>
        <form id="editForm" class="form" style="display:none;margin-top:12px">
          <div class="form__row">
            <input id="editTitle" class="input" placeholder="Title" value="<?php echo e((string)$art['title']); ?>">
            <select id="editType" class="input">
              <option value="Cave Art" <?php echo $art['type'] === 'Cave Art' ? 'selected' : ''; ?>>Cave Art</option>
              <option value="Mural" <?php echo $art['type'] === 'Mural' ? 'selected' : ''; ?>>Mural</option>
            </select>
          </div>
          <div class="form__row">
            <select id="editPeriod" class="input">
              <option value="Ancient" <?php echo $art['period'] === 'Ancient' ? 'selected' : ''; ?>>Ancient</option>
              <option value="Contemporary" <?php echo $art['period'] === 'Contemporary' ? 'selected' : ''; ?>>Contemporary</option>
            </select>
            <input id="editCondition" class="input" placeholder="Condition" value="<?php echo e((string)$art['condition']); ?>">
          </div>
          <textarea id="editDescription" class="input" rows="3" placeholder="Description"><?php echo e((string)$art['description']); ?></textarea>
          <div class="form__row">
            <input id="editNotes" class="input" placeholder="Location notes" value="<?php echo e((string)($art['locationNotes'] ?? '')); ?>">
            <input id="editLat" class="input" placeholder="Lat" value="<?php echo is_null($art['lat']) ? '' : e((string)$art['lat']); ?>">
            <input id="editLng" class="input" placeholder="Lng" value="<?php echo is_null($art['lng']) ? '' : e((string)$art['lng']); ?>">
          </div>
          <div class="form__row">
            <label><input id="editArtist" type="checkbox" <?php echo ((int)$art['creditKnownArtist']) ? 'checked' : ''; ?>> Credit known artist</label>
            <label><input id="editSensitive" type="checkbox" <?php echo ((int)$art['sensitive']) ? 'checked' : ''; ?>> Sensitive</label>
            <label><input id="editPrivate" type="checkbox" <?php echo ((int)$art['privateLand']) ? 'checked' : ''; ?>> Private land</label>
          </div>
          <div class="form__actions">
            <button id="saveBtn" class="btn" type="submit">Save</button>
          </div>
        </form>
      </section>

      <!-- Problem reporting -->
      <section class="card" style="margin-top:24px;padding:16px">
        <h3 class="card__title" style="margin:0 0 8px">Something wrong? Report here!</h3>
        <form id="reportForm" class="form">
          <div class="form__row">
            <select id="reportReason" class="input" aria-label="report reason" required>
              <option value="">Select a reason</option>
              <option value="inappropriate_content">Inappropriate Content</option>
              <option value="copyright_violation">Copyright Violation</option>
              <option value="cultural_sensitivity">Cultural Sensitivity Issue</option>
              <option value="incorrect_information">Incorrect Information</option>
              <option value="spam_or_fake">Spam or Fake Content</option>
              <option value="privacy_violation">Privacy Violation</option>
              <option value="other">Other</option>
            </select>
            <input id="reportNote" class="input" placeholder="Optional note">
          </div>
          <div class="form__actions">
            <button class="btn" type="submit">Submit Report</button>
          </div>
        </form>

        <div id="reportSuccess" class="notice notice--success" style="display: none; margin-top: 16px;">
          Thank you for your report! We will review it and take appropriate action if necessary.
        </div>
      </section>
    <?php endif; ?>
  </main>

  <!-- Footer -->
  <footer class="footer" style="margin-top:24px">
    <div class="container flex-between">
      <div>Â© IAA</div>
      <nav>
        <a href="../cycle2/Pages/About.html">Introduction</a> Â·
        <a href="../cycle2/Pages/Guideline.html">Guidelines</a> Â·
        <a href="../cycle2/Pages/ArtsResult.html">Art Listings</a> Â·
        <a href="../cycle2/Pages/Contact.html">Contact Us</a> Â·
        <a href="../cycle2/Pages/Disclaimer.html">Disclaimers</a>
      </nav>
    </div>
  </footer>

  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
  <script src="../cycle2/js/session.js"></script>
  <script src="../cycle2/js/header.js"></script>

  <script>
    // Enhanced CRUD functionality for PHP-rendered page
    (function(){
      <?php if (!$error && $art): ?>
      const artId = <?php echo (int)$art['art_id']; ?>;
      const artData = <?php echo json_encode($art, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP); ?>;

      // Initialize map
      if (window.L) {
        const mapEl = document.getElementById('detailMap');
        if (mapEl) {
          const map = L.map('detailMap', { center: [-33.8688, 151.2093], zoom: 11 });
          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; OpenStreetMap contributors'
          }).addTo(map);

          // Display location based on privacy settings
          function resolveDisplayLevel(art) {
            const sensitive = !!(art && art.sensitive);
            const priv = !!(art && art.privateLand);
            if (sensitive && priv) return 'hidden';
            if (sensitive) return 'locality';
            if (priv) return 'region';
            return 'exact';
          }

          function approx(n) { return Math.round(n * 10) / 10; }

          const level = resolveDisplayLevel(artData);
          const hasCoords = (typeof artData.lat === 'string' && typeof artData.lng === 'string' && artData.lat && artData.lng);

          if (!hasCoords) {
            // Keep default view
          } else if (level === 'hidden') {
            map.setView([parseFloat(artData.lat), parseFloat(artData.lng)], 10);
          } else if (level === 'locality') {
            const center = [parseFloat(artData.lat), parseFloat(artData.lng)];
            L.circle(center, { radius: 1000, color: '#2a5b9d', fillColor: '#2a5b9d', fillOpacity: 0.15 }).addTo(map);
            map.setView(center, 13);
          } else if (level === 'region') {
            const latA = approx(parseFloat(artData.lat));
            const lngA = approx(parseFloat(artData.lng));
            const approxLL = [latA, lngA];
            L.marker(approxLL).addTo(map);
            map.setView(approxLL, 11);
          } else {
            // exact
            const ll = [parseFloat(artData.lat), parseFloat(artData.lng)];
            L.marker(ll).addTo(map);
            map.setView(ll, 14);
          }
        }
      }

      // Edit functionality
      const editToggle = document.getElementById('editToggle');
      const editForm = document.getElementById('editForm');
      const deleteBtn = document.getElementById('deleteBtn');

      if (editToggle && editForm) {
        editToggle.addEventListener('click', function(){
          editForm.style.display = (editForm.style.display === 'none' || !editForm.style.display) ? 'block' : 'none';
        });
      }

      // Save functionality
      if (editForm) {
        editForm.addEventListener('submit', function(e){
          e.preventDefault();

          const payload = {
            title: document.getElementById('editTitle').value.trim(),
            type: document.getElementById('editType').value,
            period: document.getElementById('editPeriod').value,
            condition: document.getElementById('editCondition').value.trim(),
            description: document.getElementById('editDescription').value.trim(),
            locationNotes: document.getElementById('editNotes').value.trim(),
            lat: document.getElementById('editLat').value ? parseFloat(document.getElementById('editLat').value) : null,
            lng: document.getElementById('editLng').value ? parseFloat(document.getElementById('editLng').value) : null,
            creditKnownArtist: !!document.getElementById('editArtist').checked,
            sensitive: !!document.getElementById('editSensitive').checked,
            privateLand: !!document.getElementById('editPrivate').checked
          };

          fetch('/api/arts.php?id=' + encodeURIComponent(artId), {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': window.CSRF_TOKEN
            },
            body: JSON.stringify(payload)
          })
          .then(function(r){
            if (!r.ok) throw new Error('Update failed: ' + r.status);
            return r.json();
          })
          .then(function(){
            location.reload();
          })
          .catch(function(err){
            alert('Failed to save: ' + err.message);
          });
        });
      }

      // Delete functionality
      if (deleteBtn) {
        deleteBtn.addEventListener('click', function(){
          if (!confirm('Delete this artwork? This action cannot be undone.')) return;

          fetch('/api/arts.php?id=' + encodeURIComponent(artId), {
            method: 'DELETE',
            headers: {
              'X-CSRF-Token': window.CSRF_TOKEN
            }
          })
          .then(function(r){
            if (!r.ok) throw new Error('Delete failed: ' + r.status);
            return r.json();
          })
          .then(function(){
            window.location.href = '../cycle2/Pages/ArtsResult.html';
          })
          .catch(function(err){
            alert('Failed to delete: ' + err.message);
          });
        });
      }

      // Build gallery for multiple images
      buildGallery(artData);

      function buildGallery(item){
        try{
          const gallery = document.querySelector('.gallery');
          if (!gallery) return;

          let images = [];
          if (Array.isArray(item.images) && item.images.length){
            images = item.images.filter(Boolean);
          } else if (item.image) {
            images = [item.image];
          } else {
            images = ['../test.jpg'];
          }

          // If only one image, keep simple display
          if (images.length <= 1){
            return; // Already rendered by PHP
          }

          // Build slider structure for multiple images
          gallery.innerHTML = '';
          const slider = document.createElement('div');
          slider.className = 'slider';
          slider.setAttribute('role','region');
          slider.setAttribute('aria-label','Artwork gallery');

          const track = document.createElement('div');
          track.className = 'slider__track';
          slider.appendChild(track);

          images.forEach(function(src, i){
            const slide = document.createElement('div');
            slide.className = 'slider__slide';
            const img = document.createElement('img');
            img.src = src;
            img.alt = (item.title || 'Artwork') + ' - image ' + (i+1);
            slide.appendChild(img);
            track.appendChild(slide);
          });

          const nav = document.createElement('div');
          nav.className = 'slider__nav';
          const prev = document.createElement('button');
          prev.className = 'slider__btn';
          prev.type = 'button';
          prev.setAttribute('aria-label','Previous image');
          prev.textContent = 'â€¹';
          const next = document.createElement('button');
          next.className = 'slider__btn';
          next.type = 'button';
          next.setAttribute('aria-label','Next image');
          next.textContent = 'â€º';
          nav.appendChild(prev);
          nav.appendChild(next);
          slider.appendChild(nav);

          const dots = document.createElement('div');
          dots.className = 'slider__dots';
          const dotButtons = [];
          images.forEach(function(_, i){
            const dot = document.createElement('button');
            dot.className = 'slider__dot';
            dot.type = 'button';
            dot.setAttribute('aria-label','Go to image ' + (i+1));
            if (i === 0) dot.setAttribute('aria-current','true');
            dots.appendChild(dot);
            dotButtons.push(dot);
          });
          slider.appendChild(dots);

          gallery.appendChild(slider);

          let index = 0;
          function update(){
            const offset = -index * 100;
            track.style.transform = 'translateX(' + offset + '%)';
            dotButtons.forEach(function(b, i){ b.setAttribute('aria-current', i === index ? 'true' : 'false'); });
          }
          function go(n){ index = (n + images.length) % images.length; update(); }
          function nextSlide(){ go(index + 1); }
          function prevSlide(){ go(index - 1); }

          prev.addEventListener('click', prevSlide);
          next.addEventListener('click', nextSlide);
          dotButtons.forEach(function(b, i){ b.addEventListener('click', function(){ go(i); }); });

          // Keyboard support
          slider.tabIndex = 0;
          slider.addEventListener('keydown', function(e){
            if (e.key === 'ArrowRight') { e.preventDefault(); nextSlide(); }
            if (e.key === 'ArrowLeft') { e.preventDefault(); prevSlide(); }
          });

          // Auto-play with pause on hover/focus
          let timer = setInterval(nextSlide, 5000);
          function pause(){ clearInterval(timer); timer = null; }
          function resume(){ if (!timer) timer = setInterval(nextSlide, 5000); }
          slider.addEventListener('mouseenter', pause);
          slider.addEventListener('mouseleave', resume);
          slider.addEventListener('focusin', pause);
          slider.addEventListener('focusout', resume);

          update();
        }catch(err){
          if (window.console && console.error) console.error('Failed to build gallery:', err);
        }
      }

      // Report form functionality
      const reportForm = document.getElementById('reportForm');
      const reportSuccess = document.getElementById('reportSuccess');

      if (reportForm) {
        reportForm.addEventListener('submit', function(e) {
          e.preventDefault();

          const formData = {
            art_id: <?php echo (int)$art['art_id']; ?>,
            reason: document.getElementById('reportReason').value.trim(),
            note: document.getElementById('reportNote').value.trim()
          };

          if (!formData.reason) {
            alert('Please select a reason for your report.');
            return;
          }

          const submitBtn = reportForm.querySelector('button[type="submit"]');
          const originalText = submitBtn.textContent;
          submitBtn.disabled = true;
          submitBtn.textContent = 'Submitting...';

          fetch('/api/reports.php', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
          })
          .then(function(response) {
            if (!response.ok) {
              return response.json().then(function(data) {
                throw new Error(data.error || 'Report submission failed');
              });
            }
            return response.json();
          })
          .then(function(data) {
            reportSuccess.style.display = 'block';
            reportSuccess.innerHTML = '<strong>Success!</strong> ' + data.message;
            reportForm.reset();

            setTimeout(function() {
              reportSuccess.style.display = 'none';
            }, 5000);
          })
          .catch(function(error) {
            console.error('Report submission error:', error);
            alert('Error: ' + error.message + '. Please try again.');
          })
          .finally(function() {
            submitBtn.disabled = false;
            submitBtn.textContent = originalText;
          });
        });
      }

      <?php endif; ?>
    })();
  </script>
  <script>
    (function(){
      var artId = <?php echo (int)$art['art_id']; ?>;
      var btn = document.getElementById('favOverlayBtn');
      if (!btn || !artId) return;
      function setState(on){
        btn.textContent = on ? 'â™¥' : 'â™¡';
        btn.classList.toggle('is-on', !!on);
        btn.setAttribute('aria-pressed', on ? 'true' : 'false');
        btn.title = on ? 'Remove from favorites' : 'Add to favorites';
        btn.dataset.on = on ? '1' : '0';
      }
      function check(){ fetch('/api/favorites.php?art_id=' + artId, { credentials:'include' })
        .then(function(r){ return r.json() }).then(function(d){ setState(!!(d && d.favorited)) })
        .catch(function(){ /* ignore */ }) }
      function toggle(){ var on = btn.dataset.on === '1';
        if (!on){
          fetch('/api/favorites.php', { method:'POST', headers:{'Content-Type':'application/json'}, credentials:'include', body: JSON.stringify({ art_id: artId }) })
            .then(function(r){ return r.json() }).then(function(){ setState(true) }).catch(function(e){ alert('Failed: ' + e) })
        } else {
          fetch('/api/favorites.php?art_id=' + artId, { method:'DELETE', credentials:'include' })
            .then(function(r){ return r.json() }).then(function(){ setState(false) }).catch(function(e){ alert('Failed: ' + e) })
        }
      }
      btn.addEventListener('click', toggle);
      check();
    })();
  </script>
</body>
</html>
